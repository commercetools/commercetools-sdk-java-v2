on:
  - push
  - workflow_dispatch
  - pull_request

name: CI

jobs:
  licenseCheck:
    if: github.event_name == 'push'
    name: Verify Licenses
    runs-on: ubuntu-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup Java
          uses: actions/setup-java@v2
          with:
              distribution: 'temurin'
              java-version: '8'
        - name: License check
          run: ./gradlew checkLicense

        - run: cat licenses/dependencies-without-allowed-license.json

        - uses: stefanzweifel/git-auto-commit-action@v4
          with:
              file_pattern: 'licenses/*.json licenses/*.md'
              commit_message: "TASK: Updating license information"
              commit_user_name: Auto Mation
              commit_user_email: automation@commercetools.com
              commit_author: Auto Mation <automation@commercetools.com>
              disable_globbing: true

  integrationTest:
    name: Integration tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Retrieve branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Fix code style
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'
        run: ./gradlew spotlessApply

      - uses: stefanzweifel/git-auto-commit-action@v4
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'
        with:
            commit_message: "spotless: Fix code style"
            commit_user_name: Auto Mation
            commit_user_email: automation@commercetools.com
            commit_author: Auto Mation <automation@commercetools.com>

      - name: Run integration tests for PR
        if: github.event_name == 'pull_request'
        run: ./gradlew clean build runMainMethodThreadLeakTest
        env:
          CTP_CLIENT_ID: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_CLIENT_SECRET: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_PROJECT_KEY: ${{ secrets.CTP_PROJECT_KEY_PR }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          CTP_JVM_SDK_LOG_LEVEL: OFF

      - name: Run integration tests
        if: github.event_name != 'pull_request'
        run: ./gradlew clean build runMainMethodThreadLeakTest
        env:
            CTP_CLIENT_ID: ${{ secrets.CTP_CLIENT_ID }}
            CTP_CLIENT_SECRET: ${{ secrets.CTP_CLIENT_SECRET }}
            CTP_PROJECT_KEY: ${{ secrets.CTP_PROJECT_KEY }}
            SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
            CTP_JVM_SDK_LOG_LEVEL: OFF

      - name: Test examples
        run: |
          ./gradlew publishMavenPublicationToMavenLocal
          cd examples/maven-okhttp3 && mvn verify --no-transfer-progress
          cd ../maven-okhttp4 && mvn verify --no-transfer-progress

      - name: Collect code coverage
        run: ./gradlew codeCoverageReport

      - name: Send code coverage report to Codecov.io
        run: bash <(curl -s https://codecov.io/bash) || true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
