#%RAML 1.0 Extension
usage: Adds JavaSDK extended functionality
extends: api.raml
annotationTypes:
  java-mixin:
    type: string
    allowedTargets: TypeDeclaration
  java-query-implements:
    type: string
    allowedTargets: TypeDeclaration
  java-builder-implements:
    type: string
    allowedTargets: TypeDeclaration
  java-builder-mixin:
    type: string
    allowedTargets: TypeDeclaration
  java-extends:
    type: string
    allowedTargets: TypeDeclaration
  java-implements:
    type: string
    allowedTargets: TypeDeclaration
  java-impl-mixin:
    type: string
    allowedTargets: TypeDeclaration

types:
  BaseAddress:
    (java-extends): 'com.commercetools.api.models.WithKey, BaseAddressMixin'
  Address:
    (java-extends): 'com.commercetools.api.models.Customizable<Address>'
    properties:
      id:
        required: false
  AddressDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<AddressDraft>'
  ApiClient:
    (java-extends): 'com.commercetools.api.models.Identifiable<ApiClient>'
  Asset:
    (java-extends): 'com.commercetools.api.models.Customizable<Asset>, com.commercetools.api.models.WithKey'
  AssetSource:
    (java-extends): 'com.commercetools.api.models.WithKey'
  AssetDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<AssetDraft>, com.commercetools.api.models.WithKey'
  AttributePlainEnumValue:
    (java-extends): 'com.commercetools.api.models.WithKey'
  AttributeLocalizedEnumValue:
    (java-extends): 'com.commercetools.api.models.WithKey'
  LocalizedString:
    (java-extends): 'com.commercetools.api.models.common.LocalizedStringUtil'
  ReplicaCartDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
    (java-mixin): |
      @JsonIgnore
      @Deprecated
      public default void setReference(final Object reference) {
          setReference((Reference)reference);
      };
    properties:
      reference:
        type: Reference
  CustomShippingDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ShippingDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  Cart:
    (java-extends): 'CartMixin, com.commercetools.api.models.DomainResource<Cart>, com.commercetools.api.models.Referencable<Cart>, com.commercetools.api.models.ResourceIdentifiable<Cart>, com.commercetools.api.models.Customizable<Cart>, com.commercetools.api.models.order.OrderLike<Cart>, com.commercetools.api.models.WithKey'
  InventoryMode:
    (java-mixin): |
      public static com.commercetools.api.models.cart.InventoryMode defaultValue() {
          return com.commercetools.api.models.cart.InventoryMode.NONE;
      }
  CartDiscount:
    (java-extends): 'CartDiscountMixin, com.commercetools.api.models.DomainResource<CartDiscount>, com.commercetools.api.models.Referencable<CartDiscount>, com.commercetools.api.models.ResourceIdentifiable<CartDiscount>, com.commercetools.api.models.Customizable<CartDiscount>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.CART_DISCOUNT;
      }
  CartDiscountValue:
    (java-extends): 'CartDiscountValueMixin'
  CartDiscountValueAbsolute:
    (java-extends): 'CartDiscountValueAbsoluteMixin'
  CartDiscountValueFixed:
    (java-extends): 'CartDiscountValueFixedMixin'
  CartDiscountValueGiftLineItem:
    (java-extends): 'CartDiscountValueGiftLineItemMixin'
  CartDiscountValueRelative:
    (java-extends): 'CartDiscountValueRelativeMixin'
  Category:
    (java-extends): 'CategoryMixin, com.commercetools.api.models.DomainResource<Category>, com.commercetools.api.models.Referencable<Category>, com.commercetools.api.models.ResourceIdentifiable<Category>, com.commercetools.api.models.Customizable<Category>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.CATEGORY;
      }
  Channel:
    (java-extends): 'ChannelMixin, com.commercetools.api.models.DomainResource<Channel>, com.commercetools.api.models.Referencable<Channel>, com.commercetools.api.models.ResourceIdentifiable<Channel>, com.commercetools.api.models.Customizable<Channel>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.CHANNEL;
      }
  CustomObject:
    (java-extends): 'CustomObjectMixin, com.commercetools.api.models.DomainResource<CustomObject>, com.commercetools.api.models.Referencable<CustomObject>'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.KEY_VALUE_DOCUMENT;
      }
  CustomObjectPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<CustomObject>'
  CustomObjectReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<CustomObject>'
  Customer:
    (java-extends): 'CustomerMixin, com.commercetools.api.models.DomainResource<Customer>, com.commercetools.api.models.Referencable<Customer>, com.commercetools.api.models.ResourceIdentifiable<Customer>, com.commercetools.api.models.Customizable<Customer>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.CUSTOMER;
      }
  CustomerDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CustomerDraft>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static CustomerDraftBuilder builder(Customer customer) {
          return CustomerDraftMixin.builder(customer);
      }
  CustomerPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Customer>'
  CustomerReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Customer>'
  CustomerResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Customer>'
  CustomerUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<CustomerUpdate,
      CustomerUpdateAction, CustomerUpdateBuilder>'
  CustomerUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<CustomerUpdateAction>'
  CustomerSetKeyAction:
    (java-mixin): |
      public static CustomerSetKeyAction ofUnset() {
          return CustomerSetKeyAction.of();
      }
  CustomerSetCustomFieldAction:
    (java-mixin): |
      public static CustomerSetCustomFieldAction ofUnset(final String name) {
          return CustomerSetCustomFieldActionBuilder.of().name(name).build();
      }
  CustomerSetAddressCustomFieldAction:
    (java-mixin): |
      public static CustomerSetAddressCustomFieldAction ofUnset(final String name) {
          return CustomerSetAddressCustomFieldActionBuilder.of().name(name).build();
      }
  CustomerGroup:
    (java-extends): 'CustomerGroupMixin, com.commercetools.api.models.DomainResource<CustomerGroup>, com.commercetools.api.models.Referencable<CustomerGroup>, com.commercetools.api.models.ResourceIdentifiable<CustomerGroup>, com.commercetools.api.models.Customizable<CustomerGroup>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.CUSTOMER_GROUP;
      }
  CustomerGroupDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CustomerGroupDraft>, com.commercetools.api.models.WithKey'
  CustomerGroupPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<CustomerGroup>'
  CustomerGroupReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<CustomerGroup>'
  CustomerGroupResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<CustomerGroup>'
  CustomerGroupUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<CustomerGroupUpdate,
      CustomerGroupUpdateAction, CustomerGroupUpdateBuilder>'
  CustomerGroupUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<CustomerGroupUpdateAction>'
  CustomerGroupSetKeyAction:
    (java-mixin): |
      public static CustomerGroupSetKeyAction ofUnset() {
          return CustomerGroupSetKeyAction.of();
      }
  CustomerGroupSetCustomFieldAction:
    (java-mixin): |
      public static CustomerGroupSetCustomFieldAction ofUnset(final String name) {
          return CustomerGroupSetCustomFieldActionBuilder.of().name(name).build();
      }
  CustomFieldEnumValue:
      (java-extends): 'com.commercetools.api.models.WithKey'
  CustomFieldLocalizedEnumValue:
      (java-extends): 'com.commercetools.api.models.WithKey'
  DiscountCode:
    (java-extends): 'DiscountCodeMixin, com.commercetools.api.models.DomainResource<DiscountCode>, com.commercetools.api.models.Referencable<DiscountCode>, com.commercetools.api.models.ResourceIdentifiable<DiscountCode>, com.commercetools.api.models.Customizable<DiscountCode>'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.DISCOUNT_CODE;
      }
  DiscountCodeDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<DiscountCodeDraft>'
  DiscountCodePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<DiscountCode>'
  DiscountCodeReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<DiscountCode>'
  DiscountCodeResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<DiscountCode>'
  DiscountCodeUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<DiscountCodeUpdate,
      DiscountCodeUpdateAction, DiscountCodeUpdateBuilder>'
  DiscountCodeUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<DiscountCodeUpdateAction>'
  DiscountCodeSetCustomFieldAction:
    (java-mixin): |
      public static DiscountCodeSetCustomFieldAction ofUnset(final String name) {
          return DiscountCodeSetCustomFieldActionBuilder.of().name(name).build();
      }
  Extension:
    (java-extends): 'com.commercetools.api.models.DomainResource<Extension>, com.commercetools.api.models.WithKey'
  ExtensionDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ExtensionPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Extension>'
  ExtensionUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ExtensionUpdate,
      ExtensionUpdateAction, ExtensionUpdateBuilder>'
  ExtensionUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ExtensionUpdateAction>'
  ExtensionSetKeyAction:
    (java-mixin): |
      public static ExtensionSetKeyAction ofUnset() {
          return ExtensionSetKeyAction.of();
      }
  InventoryEntry:
    (java-extends): 'InventoryEntryMixin, com.commercetools.api.models.DomainResource<InventoryEntry>, com.commercetools.api.models.Referencable<InventoryEntry>, com.commercetools.api.models.ResourceIdentifiable<InventoryEntry>, com.commercetools.api.models.Customizable<InventoryEntry>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.INVENTORY_ENTRY;
      }
  InventoryEntryDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<InventoryEntryDraft>, com.commercetools.api.models.WithKey'
  InventoryPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<InventoryEntry>'
  InventoryEntryReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<InventoryEntry>'
  InventoryEntryResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<InventoryEntry>'
  InventoryEntryUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<InventoryEntryUpdate,
      InventoryEntryUpdateAction, InventoryEntryUpdateBuilder>'
  InventoryEntryUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<InventoryEntryUpdateAction>'
  InventoryEntrySetKeyAction:
    (java-mixin): |
      public static InventoryEntrySetKeyAction ofUnset() {
          return InventoryEntrySetKeyAction.of();
      }
  InventoryEntrySetCustomFieldAction:
    (java-mixin): |
      public static InventoryEntrySetCustomFieldAction ofUnset(final String name) {
          return InventoryEntrySetCustomFieldActionBuilder.of().name(name).build();
      }
  Order:
    (java-extends): 'OrderMixin, com.commercetools.api.models.DomainResource<Order>, com.commercetools.api.models.Referencable<Order>, com.commercetools.api.models.ResourceIdentifiable<Order>, com.commercetools.api.models.Customizable<Order>, com.commercetools.api.models.order.OrderLike<Order>'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.ORDER;
      }
  OrderImportDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<OrderImportDraft>'
  OrderPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Order>'
  OrderReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Order>'
  OrderUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<OrderUpdate, OrderUpdateAction, OrderUpdateBuilder>'
  OrderUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<OrderUpdateAction>'
  OrderAddDeliveryAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<OrderAddDeliveryAction>'
  OrderSetDeliveryAddressAction:
    (java-mixin): |
      public static OrderSetDeliveryAddressAction ofUnset(final String deliveryId) {
          return OrderSetDeliveryAddressActionBuilder.of().deliveryId(deliveryId).build();
      }
  OrderSetLineItemCustomFieldAction:
    (java-mixin): |
      public static OrderSetLineItemCustomFieldAction ofUnset(final String name, final String lineItemId) {
          return OrderSetLineItemCustomFieldActionBuilder.of().name(name).lineItemId(lineItemId).build();
      }
  OrderSetCustomFieldAction:
    (java-mixin): |
      public static OrderSetCustomFieldAction ofUnset(final String name) {
          return OrderSetCustomFieldActionBuilder.of().name(name).build();
      }
  OrderSetBillingAddressCustomFieldAction:
    (java-mixin): |
      public static OrderSetBillingAddressCustomFieldAction ofUnset(final String name) {
          return OrderSetBillingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  OrderSetCustomLineItemCustomFieldAction:
    (java-mixin): |
      public static OrderSetCustomLineItemCustomFieldAction ofUnset(final String name, final String customLineItemId) {
          return OrderSetCustomLineItemCustomFieldActionBuilder.of().name(name).customLineItemId(customLineItemId).build();
      }
  OrderSetDeliveryAddressCustomFieldAction:
    (java-mixin): |
      public static OrderSetDeliveryAddressCustomFieldAction ofUnset(final String name, final String deliveryId) {
          return OrderSetDeliveryAddressCustomFieldActionBuilder.of().name(name).deliveryId(deliveryId).build();
      }
  OrderSetItemShippingAddressCustomFieldAction:
    (java-mixin): |
      public static OrderSetItemShippingAddressCustomFieldAction ofUnset(final String name, final String addressKey) {
          return OrderSetItemShippingAddressCustomFieldActionBuilder.of().name(name).addressKey(addressKey).build();
      }
  OrderSetShippingAddressCustomFieldAction:
    (java-mixin): |
      public static OrderSetShippingAddressCustomFieldAction ofUnset(final String name) {
          return OrderSetShippingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  OrderSetDeliveryCustomFieldAction:
    (java-mixin): |
      public static OrderSetDeliveryCustomFieldAction ofUnset(final String name, final String deliveryId) {
          return OrderSetDeliveryCustomFieldActionBuilder.of().name(name).deliveryId(deliveryId).build();
      }
  OrderSetParcelCustomFieldAction:
    (java-mixin): |
      public static OrderSetParcelCustomFieldAction ofUnset(final String name, final String parcelId) {
          return OrderSetParcelCustomFieldActionBuilder.of().name(name).parcelId(parcelId).build();
      }
  OrderSetReturnItemCustomFieldAction:
    (java-mixin): |
      public static OrderSetReturnItemCustomFieldAction ofUnset(final String name, final String returnItemId) {
          return OrderSetReturnItemCustomFieldActionBuilder.of().name(name).returnItemId(returnItemId).build();
      }
  OrderEdit:
    (java-extends): 'OrderEditMixin, com.commercetools.api.models.DomainResource<OrderEdit>, com.commercetools.api.models.Referencable<OrderEdit>, com.commercetools.api.models.ResourceIdentifiable<OrderEdit>, com.commercetools.api.models.Customizable<OrderEdit>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.ORDER_EDIT;
      }
  OrderEditPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<OrderEdit>'
  OrderEditReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<OrderEdit>'
  OrderEditResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<OrderEdit>'
  OrderEditUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<OrderEditUpdate, OrderEditUpdateAction, OrderEditUpdateBuilder>'
  OrderEditUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<OrderEditUpdateAction>'
  OrderEditSetKeyAction:
    (java-mixin): |
      public static OrderEditSetKeyAction ofUnset() {
          return OrderEditSetKeyAction.of();
      }
  OrderEditSetCustomFieldAction:
    (java-mixin): |
      public static OrderEditSetCustomFieldAction ofUnset(final String name) {
          return OrderEditSetCustomFieldActionBuilder.of().name(name).build();
      }
  OrderSearchQuery:
    (java-builder-implements): 'OrderSearchQueryBuilderMixin'
  StagedOrderUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<StagedOrderUpdateAction>'
  StagedOrderAddCustomLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<StagedOrderAddCustomLineItemAction>'
  StagedOrderAddDeliveryAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<StagedOrderAddDeliveryAction>'
  StagedOrderAddLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<StagedOrderAddLineItemAction>'
  StagedOrderSetShippingRateInputAction:
    (java-mixin): |
      public static StagedOrderSetShippingRateInputAction ofUnset() {
          return StagedOrderSetShippingRateInputAction.of();
      }
  StagedOrderSetDeliveryAddressAction:
    (java-mixin): |
      public static StagedOrderSetDeliveryAddressAction ofUnset() {
          return StagedOrderSetDeliveryAddressAction.of();
      }
  StagedOrderSetLineItemCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetLineItemCustomFieldAction ofUnset(final String name, final String lineItemId) {
          return StagedOrderSetLineItemCustomFieldActionBuilder.of().name(name).lineItemId(lineItemId).build();
      }
  StagedOrderSetBillingAddressCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetBillingAddressCustomFieldAction ofUnset(final String name) {
          return StagedOrderSetBillingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  StagedOrderSetCustomLineItemCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetCustomLineItemCustomFieldAction ofUnset(final String name, final String customLineItemId) {
          return StagedOrderSetCustomLineItemCustomFieldActionBuilder.of().name(name).customLineItemId(customLineItemId).build();
      }
  StagedOrderSetDeliveryAddressCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetDeliveryAddressCustomFieldAction ofUnset(final String name, final String deliveryId) {
          return StagedOrderSetDeliveryAddressCustomFieldActionBuilder.of().name(name).deliveryId(deliveryId).build();
      }
  StagedOrderSetItemShippingAddressCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetItemShippingAddressCustomFieldAction ofUnset(final String name, final String addressKey) {
          return StagedOrderSetItemShippingAddressCustomFieldActionBuilder.of().name(name).addressKey(addressKey).build();
      }
  StagedOrderSetShippingAddressCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetShippingAddressCustomFieldAction ofUnset(final String name) {
          return StagedOrderSetShippingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  StagedOrderSetDeliveryCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetDeliveryCustomFieldAction ofUnset(final String name, final String deliveryId) {
          return StagedOrderSetDeliveryCustomFieldActionBuilder.of().name(name).deliveryId(deliveryId).build();
      }
  StagedOrderSetParcelCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetParcelCustomFieldAction ofUnset(final String name, final String parcelId) {
          return StagedOrderSetParcelCustomFieldActionBuilder.of().name(name).parcelId(parcelId).build();
      }
  StagedOrderSetReturnItemCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetReturnItemCustomFieldAction ofUnset(final String name, final String returnItemId) {
          return StagedOrderSetReturnItemCustomFieldActionBuilder.of().name(name).returnItemId(returnItemId).build();
      }
  StagedOrderSetCustomFieldAction:
    (java-mixin): |
      public static StagedOrderSetCustomFieldAction ofUnset(final String name) {
          return StagedOrderSetCustomFieldActionBuilder.of().name(name).build();
      }
  Payment:
    (java-extends): 'PaymentMixin, com.commercetools.api.models.DomainResource<Payment>, com.commercetools.api.models.Referencable<Payment>, com.commercetools.api.models.ResourceIdentifiable<Payment>, com.commercetools.api.models.Customizable<Payment>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.PAYMENT;
      }
  PaymentDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<PaymentDraft>, com.commercetools.api.models.WithKey'
  PaymentPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Payment>'
  PaymentReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Payment>'
  PaymentResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Payment>'
  PaymentUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<PaymentUpdate,
      PaymentUpdateAction, PaymentUpdateBuilder>'
  PaymentUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<PaymentUpdateAction>'
  PaymentSetKeyAction:
    (java-mixin): |
      public static PaymentSetKeyAction ofUnset() {
          return PaymentSetKeyAction.of();
      }
  PaymentSetCustomFieldAction:
    (java-mixin): |
      public static PaymentSetCustomFieldAction ofUnset(final String name) {
          return PaymentSetCustomFieldActionBuilder.of().name(name).build();
      }
  PaymentSetTransactionCustomFieldAction:
    (java-mixin): |
      public static PaymentSetTransactionCustomFieldAction ofUnset(final String name, final String transactionId) {
          return PaymentSetTransactionCustomFieldActionBuilder.of().name(name).transactionId(transactionId).build();
      }

  Transaction:
    (java-extends): 'com.commercetools.api.models.Customizable<Transaction>'
  TransactionDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<TransactionDraft>'
  Attribute:
    (java-query-implements): 'AttributeQueryBuilderMixin'
  FieldContainer:
    (java-query-implements): 'FieldContainerQueryBuilderMixin'
  Product:
    (java-extends): 'ProductMixin, com.commercetools.api.models.DomainResource<Product>, com.commercetools.api.models.Referencable<Product>, com.commercetools.api.models.ResourceIdentifiable<Product>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.PRODUCT;
      }
  ProductCatalogData:
    (java-extends): 'ProductCatalogDataMixin'
  ProductDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ProductData:
    (java-extends): 'ProductDataLike'
  ProductPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Product>'
  ProductProjection:
    (java-extends): 'ProductDataLike, ProductProjectionMixin,
      com.commercetools.api.models.DomainResource<ProductProjection>, com.commercetools.api.models.WithKey'
  ProductVariant:
    (java-extends): 'AttributeContainer, com.commercetools.api.models.WithKey'
  ProductVariantDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ProductProjectionPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductProjection>'
  ProductProjectionPagedSearchResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductProjection>'
  ProductReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Product>, ProductReferenceMixin'
  ProductResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Product>'
  ProductUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ProductUpdate,
      ProductUpdateAction, ProductUpdateBuilder>'
  ProductUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ProductUpdateAction>'
  ProductSetKeyAction:
    (java-mixin): |
      public static ProductSetKeyAction ofUnset() {
          return ProductSetKeyAction.of();
      }
  ProductSetImageLabelAction:
    (java-mixin): |
      public static ProductSetImageLabelAction ofUnset(final Long variantId, final String imageUrl, final Boolean staged) {
          return ProductSetImageLabelActionBuilder.of().variantId(variantId).imageUrl(imageUrl).staged(staged).build();
      }

      public static ProductSetImageLabelAction ofUnsetStaged(final Long variantId, final String imageUrl) {
          return ProductSetImageLabelActionBuilder.of().variantId(variantId).imageUrl(imageUrl).build();
      }
  ProductSetTaxCategoryAction:
    (java-mixin): |
      public static ProductSetTaxCategoryAction ofUnset() {
          return ProductSetTaxCategoryAction.of();
      }
  ProductSetCustomerAction:
    (java-mixin): |
      public static ProductSetCustomerAction ofUnset() {
          return ProductSetCustomerAction.of();
      }
  ProductSetProductPriceCustomFieldAction:
    (java-mixin): |
      public static ProductSetProductPriceCustomFieldAction ofUnset(final String name, final String priceId) {
          return ProductSetProductPriceCustomFieldActionBuilder.of().name(name).priceId(priceId).build();
      }

      public static ProductSetProductPriceCustomFieldAction ofUnsetStaged(final String name, final String priceId,
              final Boolean staged) {
          return ProductSetProductPriceCustomFieldActionBuilder.of().name(name).priceId(priceId).staged(staged).build();
      }
  ProductSetAttributeAction:
    (java-mixin): |
      public static ProductSetAttributeAction ofVariantId(final Long variantId, final String name, final com.fasterxml.jackson.databind.JsonNode value, final Boolean staged) {
          return ProductSetAttributeActionBuilder.of().variantId(variantId).name(name).value(value).staged(staged).build();
      }

      public static ProductSetAttributeAction ofSku(final String sku, final String name, final com.fasterxml.jackson.databind.JsonNode value, final Boolean staged) {
          return ProductSetAttributeActionBuilder.of().sku(sku).name(name).value(value).staged(staged).build();
      }

      public static ProductSetAttributeAction ofUnsetAttribute(final Long variantId, final String name) {
          return ProductSetAttributeActionBuilder.of().variantId(variantId).name(name).build();
      }

      public static ProductSetAttributeAction ofUnsetAttribute(final Long variantId, final String name, final Boolean staged) {
          return ProductSetAttributeActionBuilder.of().variantId(variantId).name(name).staged(staged).build();
      }

      public static ProductSetAttributeAction ofUnsetAttributeForVariantId(final Long variantId, final String name) {
          return ProductSetAttributeActionBuilder.of().variantId(variantId).name(name).build();
      }

      public static ProductSetAttributeAction ofUnsetAttributeForSku(final String sku, final String name) {
          return ProductSetAttributeActionBuilder.of().sku(sku).name(name).build();
      }

      public static ProductSetAttributeAction ofUnsetAttributeForSku(final String sku, final String name, final Boolean staged) {
          return ProductSetAttributeActionBuilder.of().sku(sku).name(name).staged(staged).build();
      }
  ProductSetAttributeInAllVariantsAction:
    (java-mixin): |
      public static ProductSetAttributeInAllVariantsAction ofUnsetAttribute(final String name) {
          return ProductSetAttributeInAllVariantsActionBuilder.of().name(name).build();
      }

      public static ProductSetAttributeInAllVariantsAction ofUnsetAttribute(final String name, final Boolean staged) {
          return ProductSetAttributeInAllVariantsActionBuilder.of().name(name).staged(staged).build();
      }
  ProductDiscount:
    (java-extends): 'ProductDiscountMixin, com.commercetools.api.models.DomainResource<ProductDiscount>, com.commercetools.api.models.Referencable<ProductDiscount>, com.commercetools.api.models.ResourceIdentifiable<ProductDiscount>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.PRODUCT_DISCOUNT;
      }
  ProductDiscountDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ProductDiscountPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductDiscount>'
  ProductDiscountReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductDiscount>'
  ProductDiscountResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductDiscount>'
  ProductDiscountUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ProductDiscountUpdate,
      ProductDiscountUpdateAction, ProductDiscountUpdateBuilder>'
  ProductDiscountUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ProductDiscountUpdateAction>'
  ProductDiscountSetKeyAction:
    (java-mixin): |
      public static ProductDiscountSetKeyAction ofUnset() {
          return ProductDiscountSetKeyAction.of();
      }
  ProductType:
    (java-extends): 'AttributeDefinitionContainer, ProductTypeMixin, com.commercetools.api.models.DomainResource<ProductType>, com.commercetools.api.models.Referencable<ProductType>, com.commercetools.api.models.ResourceIdentifiable<ProductType>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.PRODUCT_TYPE;
      }
  ProductTypeDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ProductTypePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductType>'
  ProductTypeReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductType>'
  ProductTypeResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductType>'
  ProductTypeUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ProductTypeUpdate,
      ProductTypeUpdateAction, ProductTypeUpdateBuilder>'
  ProductTypeUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ProductTypeUpdateAction>'
  ProductTypeSetKeyAction:
    (java-mixin): |
      public static ProductTypeSetKeyAction ofUnset() {
          return ProductTypeSetKeyAction.of();
      }
  Project:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ProjectUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ProjectUpdate,
      ProjectUpdateAction, ProjectUpdateBuilder>'
  ProjectUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ProjectUpdateAction>'
  ProjectSetShippingRateInputTypeAction:
    (java-mixin): |
      public static ProjectSetShippingRateInputTypeAction ofUnset() {
          return ProjectSetShippingRateInputTypeAction.of();
      }
  AssignedProductSelectionPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<AssignedProductSelection>'

  ProductSelection:
    (java-extends): 'ProductSelectionMixin, com.commercetools.api.models.DomainResource<ProductSelection>, com.commercetools.api.models.Referencable<ProductSelection>, com.commercetools.api.models.ResourceIdentifiable<ProductSelection>, com.commercetools.api.models.Customizable<ProductSelection>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.PRODUCT_SELECTION;
      }
  ProductSelectionDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ProductSelectionDraft>, com.commercetools.api.models.WithKey'
  ProductSelectionPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductSelection>'
  ProductSelectionProductPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<AssignedProductReference>'
  ProductSelectionReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductSelection>'
  ProductSelectionResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<ProductSelection>'
  ProductSelectionUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ProductSelectionUpdate,
      ProductSelectionUpdateAction, ProductSelectionUpdateBuilder>'
  ProductSelectionUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ProductSelectionUpdateAction>'
  ProductSelectionSetKeyAction:
    (java-mixin): |
      public static ProductSelectionSetKeyAction ofUnset() {
          return ProductSelectionSetKeyAction.of();
      }
  ProductsInStorePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ProductSelectionAssignment>'

  Quote:
    (java-extends): 'QuoteMixin, com.commercetools.api.models.DomainResource<Quote>, com.commercetools.api.models.Referencable<Quote>, com.commercetools.api.models.ResourceIdentifiable<Quote>, com.commercetools.api.models.Customizable<Quote>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.QUOTE;
      }
  QuoteDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<QuoteDraft>, com.commercetools.api.models.WithKey'
  QuotePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Quote>'
  QuoteReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Quote>'
  QuoteResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Quote>'
  QuoteUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<QuoteUpdate,
      QuoteUpdateAction, QuoteUpdateBuilder>'
  QuoteUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<QuoteUpdateAction>'
  QuoteSetCustomFieldAction:
    (java-mixin): |
      public static QuoteSetCustomFieldAction ofUnset(final String name) {
          return QuoteSetCustomFieldActionBuilder.of().name(name).build();
      }
  QuoteRequestPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<QuoteRequest>'
  QuoteRequestReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<QuoteRequest>'
  QuoteRequestResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<QuoteRequest>'
  QuoteRequestUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<QuoteRequestUpdate,
      QuoteRequestUpdateAction, QuoteRequestUpdateBuilder>'
  QuoteRequestUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<QuoteRequestUpdateAction>'
  QuoteRequestSetCustomFieldAction:
    (java-mixin): |
      public static QuoteRequestSetCustomFieldAction ofUnset(final String name) {
          return QuoteRequestSetCustomFieldActionBuilder.of().name(name).build();
      }
  QuoteRequest:
    (java-extends): 'com.commercetools.api.models.WithKey'
  QuoteRequestDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  StagedQuote:
    (java-extends): 'com.commercetools.api.models.WithKey'
  StagedQuoteDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'

  Review:
    (java-extends): 'ReviewMixin, com.commercetools.api.models.DomainResource<Review>, com.commercetools.api.models.Referencable<Review>, com.commercetools.api.models.ResourceIdentifiable<Review>, com.commercetools.api.models.Customizable<Review>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.REVIEW;
      }

      @Deprecated
      @JsonIgnore
      public default void setTarget(final Object target) {
          setTarget((Reference)target);
      };
    properties:
      target?:
        type: Reference
  ReviewDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ReviewDraft>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      @Deprecated
      @JsonIgnore
      public default void setTarget(final Object target) {
          setTarget((ResourceIdentifier)target);
      };
    properties:
      target?:
        type: ResourceIdentifier
  ReviewPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Review>'
  ReviewReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Review>'
  ReviewResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Review>'
  ReviewUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ReviewUpdate,
      ReviewUpdateAction, ReviewUpdateBuilder>'
  ReviewUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ReviewUpdateAction>'
  ReviewSetKeyAction:
    (java-mixin): |
      public static ReviewSetKeyAction ofUnset() {
          return ReviewSetKeyAction.of();
      }
  ReviewSetCustomerAction:
    (java-mixin): |
      public static ReviewSetCustomerAction ofUnset() {
          return ReviewSetCustomerAction.of();
      }
  ReviewSetCustomFieldAction:
    (java-mixin): |
      public static ReviewSetCustomFieldAction ofUnset(final String name) {
          return ReviewSetCustomFieldActionBuilder.of().name(name).build();
      }
  ShippingMethod:
    (java-extends): 'ShippingMethodMixin, com.commercetools.api.models.DomainResource<ShippingMethod>, com.commercetools.api.models.Referencable<ShippingMethod>, com.commercetools.api.models.ResourceIdentifiable<ShippingMethod>, com.commercetools.api.models.Customizable<ShippingMethod>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.SHIPPING_METHOD;
      }
  ShippingMethodDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ShippingMethodDraft>, com.commercetools.api.models.WithKey'
  ShippingMethodPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ShippingMethod>'
  ShippingMethodReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<ShippingMethod>'
  ShippingMethodResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<ShippingMethod>'
  ShippingMethodUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ShippingMethodUpdate,
      ShippingMethodUpdateAction, ShippingMethodUpdateBuilder>'
  ShippingMethodUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ShippingMethodUpdateAction>'
  ShippingMethodSetKeyAction:
    (java-mixin): |
      public static ShippingMethodSetKeyAction ofUnset() {
          return ShippingMethodSetKeyAction.of();
      }
  ShippingMethodSetCustomFieldAction:
    (java-mixin): |
      public static ShippingMethodSetCustomFieldAction ofUnset(final String name) {
          return ShippingMethodSetCustomFieldActionBuilder.of().name(name).build();
      }
  ShoppingList:
    (java-extends): 'ShoppingListMixin, com.commercetools.api.models.DomainResource<ShoppingList>, com.commercetools.api.models.Referencable<ShoppingList>, com.commercetools.api.models.ResourceIdentifiable<ShoppingList>, com.commercetools.api.models.Customizable<ShoppingList>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.SHOPPING_LIST;
      }
  ShoppingListDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ShoppingListDraft>, com.commercetools.api.models.WithKey'
  ShoppingListPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ShoppingList>'
  ShoppingListReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<ShoppingList>'
  ShoppingListResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<ShoppingList>'
  ShoppingListUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ShoppingListUpdate,
      ShoppingListUpdateAction, ShoppingListUpdateBuilder>'
  ShoppingListUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ShoppingListUpdateAction>'
  ShoppingListLineItem:
    (java-extends): 'com.commercetools.api.models.Customizable<ShoppingListLineItem>'
  ShoppingListLineItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ShoppingListLineItemDraft>'
  ShoppingListAddLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ShoppingListAddLineItemAction>'
  ShoppingListAddTextLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ShoppingListAddTextLineItemAction>'
  ShoppingListSetLineItemCustomFieldAction:
    (java-mixin): |
      public static ShoppingListSetLineItemCustomFieldAction ofUnset(final String name, final String lineItemId) {
          return ShoppingListSetLineItemCustomFieldActionBuilder.of().name(name).lineItemId(lineItemId).build();
      }
  ShoppingListSetCustomerAction:
    (java-mixin): |
      public static ShoppingListSetCustomerAction ofUnset() {
          return ShoppingListSetCustomerAction.of();
      }
  ShoppingListSetSlugAction:
    (java-mixin): |
      public static ShoppingListSetSlugAction ofUnset() {
          return ShoppingListSetSlugAction.of();
      }
  ShoppingListSetCustomFieldAction:
    (java-mixin): |
      public static ShoppingListSetCustomFieldAction ofUnset(final String name) {
          return ShoppingListSetCustomFieldActionBuilder.of().name(name).build();
      }
  ShoppingListSetTextLineItemCustomFieldAction:
    (java-mixin): |
      public static ShoppingListSetTextLineItemCustomFieldAction ofUnset(final String name, final String textLineItemId) {
          return ShoppingListSetTextLineItemCustomFieldActionBuilder.of().name(name).textLineItemId(textLineItemId).build();
      }
  ShoppingListSetDeleteDaysAfterLastModificationAction:
    (java-mixin): |
      public static ShoppingListSetDeleteDaysAfterLastModificationAction ofUnset() {
          return ShoppingListSetDeleteDaysAfterLastModificationAction.of();
      }
  ShoppingListSetKeyAction:
    (java-mixin): |
      public static ShoppingListSetKeyAction ofUnset() {
          return ShoppingListSetKeyAction.of();
      }
  TextLineItem:
    (java-extends): 'com.commercetools.api.models.Customizable<TextLineItem>'
  TextLineItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<TextLineItemDraft>'

  StagedQuotePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<StagedQuote>'
  StagedQuoteReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<StagedQuote>'
  StagedQuoteResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<StagedQuote>'
  StagedQuoteUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<StagedQuoteUpdate,
      StagedQuoteUpdateAction, StagedQuoteUpdateBuilder>'
  StagedQuoteUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<StagedQuoteUpdateAction>'
  StagedQuoteSetCustomFieldAction:
    (java-mixin): |
      public static StagedQuoteSetCustomFieldAction ofUnset(final String name) {
          return StagedQuoteSetCustomFieldActionBuilder.of().name(name).build();
      }
  StandalonePrice:
    (java-extends): 'StandalonePriceMixin, com.commercetools.api.models.DomainResource<StandalonePrice>, com.commercetools.api.models.Referencable<StandalonePrice>, com.commercetools.api.models.ResourceIdentifiable<StandalonePrice>, com.commercetools.api.models.Customizable<StandalonePrice>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.STANDALONE_PRICE;
      }
  StandalonePriceDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<StandalonePriceDraft>, com.commercetools.api.models.WithKey'
  StandalonePricePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<StandalonePrice>'
  StandalonePriceUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<StandalonePriceUpdate,
      StandalonePriceUpdateAction, StandalonePriceUpdateBuilder>'
  StandalonePriceUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<StandalonePriceUpdateAction>'
  StandalonePriceSetCustomFieldAction:
    (java-mixin): |
      public static StandalonePriceSetCustomFieldAction ofUnset(final String name) {
          return StandalonePriceSetCustomFieldActionBuilder.of().name(name).build();
      }
  State:
    (java-extends): 'StateMixin, com.commercetools.api.models.DomainResource<State>, com.commercetools.api.models.Referencable<State>, com.commercetools.api.models.ResourceIdentifiable<State>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.STATE;
      }
  StateDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  StatePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<State>'
  StateReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<State>'
  StateResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<State>'
  StateUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<StateUpdate,
      StateUpdateAction, StateUpdateBuilder>'
  StateUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<StateUpdateAction>'

  Store:
    (java-extends): 'StoreMixin, com.commercetools.api.models.DomainResource<Store>, com.commercetools.api.models.Referencable<Store>, com.commercetools.api.models.ResourceIdentifiable<Store>, com.commercetools.api.models.Customizable<Store>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.STORE;
      }
  StoreDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<StoreDraft>, com.commercetools.api.models.WithKey'
  StorePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Store>'
  StoreReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Store>'
  StoreResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Store>'
  StoreUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<StoreUpdate,
      StoreUpdateAction, StoreUpdateBuilder>'
  StoreUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<StoreUpdateAction>'
  StoreSetCustomFieldAction:
    (java-mixin): |
      public static StoreSetCustomFieldAction ofUnset(final String name) {
          return StoreSetCustomFieldActionBuilder.of().name(name).build();
      }
  Subscription:
    (java-extends): 'com.commercetools.api.models.DomainResource<Subscription>, com.commercetools.api.models.WithKey'
  SubscriptionDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  SubscriptionPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Subscription>'
  SubscriptionUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<SubscriptionUpdate,
      SubscriptionUpdateAction, SubscriptionUpdateBuilder>'
  SubscriptionUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<SubscriptionUpdateAction>'
  SubscriptionSetMessagesAction:
    (java-mixin): |
      public static SubscriptionSetMessagesAction ofUnset() {
          return SubscriptionSetMessagesAction.of();
      }
  SubscriptionSetChangesAction:
    (java-mixin): |
      public static SubscriptionSetChangesAction ofUnset() {
          return SubscriptionSetChangesAction.of();
      }
  TaxCategory:
    (java-extends): 'TaxCategoryMixin, com.commercetools.api.models.DomainResource<TaxCategory>, com.commercetools.api.models.Referencable<TaxCategory>, com.commercetools.api.models.ResourceIdentifiable<TaxCategory>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.TAX_CATEGORY;
      }
  TaxCategoryDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  TaxCategoryPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<TaxCategory>'
  TaxCategoryReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<TaxCategory>'
  TaxCategoryResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<TaxCategory>'
  TaxCategoryUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<TaxCategoryUpdate,
      TaxCategoryUpdateAction, TaxCategoryUpdateBuilder>'
  TaxCategoryUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<TaxCategoryUpdateAction>'

  Type:
    (java-extends): 'TypeMixin, com.commercetools.api.models.DomainResource<Type>, com.commercetools.api.models.Referencable<Type>, com.commercetools.api.models.ResourceIdentifiable<Type>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.TYPE;
      }
  TypeDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  TypePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Type>'
  TypeResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Type>'
  TypeUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<TypeUpdate,
      TypeUpdateAction, TypeUpdateBuilder>'
  TypeUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<TypeUpdateAction>'

  Zone:
    (java-extends): 'ZoneMixin, com.commercetools.api.models.DomainResource<Zone>, com.commercetools.api.models.Referencable<Zone>, com.commercetools.api.models.ResourceIdentifiable<Zone>, com.commercetools.api.models.WithKey'
    (java-mixin): |
      public static com.commercetools.api.models.common.ReferenceTypeId referenceTypeId() {
          return com.commercetools.api.models.common.ReferenceTypeId.ZONE;
      }
  ZoneDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ZonePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Zone>'
  ZoneReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Zone>'
  ZoneResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Zone>'
  ZoneUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ZoneUpdate,
      ZoneUpdateAction, ZoneUpdateBuilder>'
  ZoneUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ZoneUpdateAction>'
  CentPrecisionMoney:
    (java-mixin): |
      public static CentPrecisionMoney of(final javax.money.MonetaryAmount monetaryAmount) {
          return MoneyUtil.of(monetaryAmount);
      }

      public default CentPrecisionMoneyDraft toDraft() {
          return CentPrecisionMoneyDraft.of(this);
      }
  CentPrecisionMoneyDraft:
    (java-mixin): |
      public static CentPrecisionMoneyDraft of(final javax.money.MonetaryAmount monetaryAmount) {
          return MoneyUtil.draftOf(monetaryAmount);
      }
      public static CentPrecisionMoneyDraft of(final CentPrecisionMoney template) {
          CentPrecisionMoneyDraftImpl instance = new CentPrecisionMoneyDraftImpl();
          instance.setCentAmount(template.getCentAmount());
          instance.setCurrencyCode(template.getCurrencyCode());
          instance.setFractionDigits(template.getFractionDigits());
          return instance;
      }
  HighPrecisionMoney:
    (java-mixin): |
      public static HighPrecisionMoney of(final javax.money.MonetaryAmount monetaryAmount, final int fractionDigits) {
          return MoneyUtil.of(monetaryAmount, fractionDigits);
      }

      public default HighPrecisionMoneyDraft toDraft() {
          return HighPrecisionMoneyDraft.of(this);
      }

      @Override
      default javax.money.MonetaryOperator createMoneyOperator() {
          return amount -> MoneyUtil.of(amount, getFractionDigits());
      }
  HighPrecisionMoneyDraft:
    (java-mixin): |
      public static HighPrecisionMoneyDraft of(javax.money.MonetaryAmount monetaryAmount, final int fractionDigits) {
          return MoneyUtil.draftOf(monetaryAmount, fractionDigits);
      }

      public static HighPrecisionMoneyDraft of(final HighPrecisionMoney template) {
          HighPrecisionMoneyDraftImpl instance = new HighPrecisionMoneyDraftImpl();
          instance.setCentAmount(template.getCentAmount());
          instance.setCurrencyCode(template.getCurrencyCode());
          instance.setFractionDigits(template.getFractionDigits());
          instance.setPreciseAmount(template.getPreciseAmount());
          return instance;
      }

      @Override
      default javax.money.MonetaryOperator createMoneyOperator() {
          return amount -> MoneyUtil.draftOf(amount, getFractionDigits());
      }
  TypedMoney:
    (java-mixin): |
      @Override
      default javax.money.MonetaryOperator createMoneyOperator() {
          return MoneyUtil::of;
      }
  TypedMoneyDraft:
    (java-mixin): |
      @Override
      default javax.money.MonetaryOperator createMoneyOperator() {
          return MoneyUtil::draftOf;
      }
  CartDiscountValueFixedDraft:
    properties:
      money:
        type: Money[]
  Reference:
    (java-extends): 'ReferenceMixin'
  KeyReference:
    (java-extends): 'com.commercetools.api.models.WithKey'
  ResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.WithKey'
    (java-builder-implements): 'ResourceIdentifierBuilderMixin'
  TypeReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Type>'
    (java-mixin): |
      @Override
      public default TypeResourceIdentifier toResourceIdentifier() {
          return TypeResourceIdentifier.builder().id(this.getId()).build();
      }
  CustomFields:
    (java-extends): 'CustomFieldsMixin'
  CustomFieldsDraft:
    (java-mixin): |
      public static CustomFieldsDraft of(final CustomFields template) {
          return template.toDraft();
      }

      public static CustomFieldsDraftBuilder builder(final CustomFields template) {
          return template.toDraftBuilder();
      }
  Parcel:
    (java-extends): 'ParcelMixin, com.commercetools.api.models.Customizable<Parcel>'
  ParcelDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ParcelDraft>'
  ReturnItem:
    (java-extends): 'com.commercetools.api.models.Customizable<ReturnItem>'
  ReturnItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ReturnItemDraft>'
  Delivery:
    (java-extends): 'DeliveryMixin, com.commercetools.api.models.Customizable<Delivery>'
  DeliveryDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<DeliveryDraft>'
  ApiClientPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<ApiClient>'
  AttributeGroup:
    (java-extends): 'com.commercetools.api.models.DomainResource<AttributeGroup>, com.commercetools.api.models.WithKey'
  AttributeGroupDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  AttributeReference:
    (java-extends): 'com.commercetools.api.models.WithKey'
  AttributeGroupReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<AttributeGroup>'
  AttributeGroupResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<AttributeGroup>'
  AttributeGroupPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<AttributeGroup>'
  AttributeGroupUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<AttributeGroupUpdate,
      AttributeGroupUpdateAction, AttributeGroupUpdateBuilder>'
  AttributeGroupUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<AttributeGroupUpdateAction>'
  AttributeGroupSetKeyAction:
    (java-mixin): |
      public static AttributeGroupSetKeyAction ofUnset() {
          return AttributeGroupSetKeyAction.of();
      }
  BusinessUnit:
    (java-extends): 'com.commercetools.api.models.WithKey'
  BusinessUnitDraft:
    (java-extends): 'com.commercetools.api.models.WithKey'
  BusinessUnitPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<BusinessUnit>'
  BusinessUnitReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<BusinessUnit>'
  BusinessUnitResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<BusinessUnit>'
  BusinessUnitUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<  BusinessUnitUpdate,
      BusinessUnitUpdateAction, BusinessUnitUpdateBuilder>'
  BusinessUnitUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<BusinessUnitUpdateAction>'
  BusinessUnitSetCustomFieldAction:
    (java-mixin): |
      public static BusinessUnitSetCustomFieldAction ofUnset(final String name) {
          return BusinessUnitSetCustomFieldActionBuilder.of().name(name).build();
      }
  BusinessUnitSetAddressCustomFieldAction:
    (java-mixin): |
      public static BusinessUnitSetAddressCustomFieldAction ofUnset(final String name) {
          return BusinessUnitSetAddressCustomFieldActionBuilder.of().name(name).build();
      }
  CartDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CartDraft>, com.commercetools.api.models.WithKey'
  CartPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Cart>'
  CartReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Cart>'
  CartResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Cart>'
  CartUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<CartUpdate, CartUpdateAction, CartUpdateBuilder>'
  CartUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<CartUpdateAction>'
  CartSetDeleteDaysAfterLastModificationAction:
    (java-mixin): |
      public static CartSetDeleteDaysAfterLastModificationAction ofUnset() {
          return CartSetDeleteDaysAfterLastModificationAction.of();
      }
  CartSetShippingRateInputAction:
    (java-mixin): |
      public static CartSetShippingRateInputAction ofUnset() {
          return CartSetShippingRateInputAction.of();
      }
  CartSetKeyAction:
    (java-mixin): |
      public static CartSetKeyAction ofUnset() {
          return CartSetKeyAction.of();
      }
  CartSetLineItemCustomFieldAction:
    (java-mixin): |
      public static CartSetLineItemCustomFieldAction ofUnset(final String name, final String lineItemId) {
          return CartSetLineItemCustomFieldActionBuilder.of().name(name).lineItemId(lineItemId).build();
      }
  CartSetCustomFieldAction:
    (java-mixin): |
      public static CartSetCustomFieldAction ofUnset(final String name) {
          return CartSetCustomFieldActionBuilder.of().name(name).build();
      }
  CartSetBillingAddressCustomFieldAction:
    (java-mixin): |
      public static CartSetBillingAddressCustomFieldAction ofUnset(final String name) {
          return CartSetBillingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  CartSetCustomLineItemCustomFieldAction:
    (java-mixin): |
      public static CartSetCustomLineItemCustomFieldAction ofUnset(final String name, final String customLineItemId) {
          return CartSetCustomLineItemCustomFieldActionBuilder.of().name(name).customLineItemId(customLineItemId).build();
      }
  CartSetItemShippingAddressCustomFieldAction:
    (java-mixin): |
      public static CartSetItemShippingAddressCustomFieldAction ofUnset(final String name, final String addressKey) {
          return CartSetItemShippingAddressCustomFieldActionBuilder.of().name(name).addressKey(addressKey).build();
      }
  CartSetShippingAddressCustomFieldAction:
    (java-mixin): |
      public static CartSetShippingAddressCustomFieldAction ofUnset(final String name) {
          return CartSetShippingAddressCustomFieldActionBuilder.of().name(name).build();
      }
  CategoryDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CategoryDraft>, com.commercetools.api.models.WithKey'
  CategoryPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Category>'
  CategoryReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Category>'
  CategoryResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Category>'

  CategoryUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<CategoryUpdate,
      CategoryUpdateAction, CategoryUpdateBuilder>'
  CategoryUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<CategoryUpdateAction>'
  CategorySetKeyAction:
    (java-mixin): |
      public static CategorySetKeyAction ofUnset() {
          return CategorySetKeyAction.of();
      }
  CategorySetCustomFieldAction:
    (java-mixin): |
      public static CategorySetCustomFieldAction ofUnset(final String name) {
          return CategorySetCustomFieldActionBuilder.of().name(name).build();
      }
  CartDiscountDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CartDiscountDraft>, com.commercetools.api.models.WithKey'
  CartDiscountPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<CartDiscount>'
  CartDiscountReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<CartDiscount>'
  CartDiscountResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<CartDiscount>'
  CartDiscountUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<CartDiscountUpdate,
      CartDiscountUpdateAction, CartDiscountUpdateBuilder>'
  CartDiscountUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<CartDiscountUpdateAction>'
  CartDiscountSetKeyAction:
    (java-mixin): |
      public static CartDiscountSetKeyAction ofUnset() {
          return CartDiscountSetKeyAction.of();
      }
  CartDiscountSetCustomFieldAction:
    (java-mixin): |
      public static CartDiscountSetCustomFieldAction ofUnset(final String name) {
          return CartDiscountSetCustomFieldActionBuilder.of().name(name).build();
      }
  CartAddCustomLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CartAddCustomLineItemAction>'
  CartAddLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CartAddLineItemAction>'
  ChannelDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<ChannelDraft>, com.commercetools.api.models.WithKey'
  ChannelPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Channel>'
  ChannelReference:
    (java-extends): 'com.commercetools.api.models.Identifiable<Channel>, ChannelReferenceMixin'
  ChannelResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<Channel>'
  ChannelUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<ChannelUpdate,
      ChannelUpdateAction, ChannelUpdateBuilder>'
  ChannelUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<ChannelUpdateAction>'
  ChannelSetGeoLocationAction:
    (java-mixin): |
      public static ChannelSetGeoLocationAction ofUnset() {
          return ChannelSetGeoLocationAction.of();
      }
  ChannelSetCustomFieldAction:
    (java-mixin): |
      public static ChannelSetCustomFieldAction ofUnset(final String name) {
          return ChannelSetCustomFieldActionBuilder.of().name(name).build();
      }
  ChannelSetAddressCustomFieldAction:
    (java-mixin): |
      public static ChannelSetAddressCustomFieldAction ofUnset(final String name) {
          return ChannelSetAddressCustomFieldActionBuilder.of().name(name).build();
      }
  CustomLineItem:
    (java-extends): 'com.commercetools.api.models.Customizable<CustomLineItem>'
  CustomLineItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CustomLineItemDraft>'
  CustomLineItemImportDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<CustomLineItemImportDraft>'
  Update:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<Update, UpdateAction, UpdateBuilder>'
  UpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<UpdateAction>'
  OrderEditDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<OrderEditDraft>, com.commercetools.api.models.WithKey'
  PagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<BaseResource>'
  LineItem:
    (java-extends): 'com.commercetools.api.models.Customizable<LineItem>'
  LineItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<LineItemDraft>'
  LineItemImportDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<LineItemImportDraft>'

  MessagePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<Message>'
  Message:
    (java-extends): 'com.commercetools.api.models.DomainResource<Message>'
  MyPaymentPagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<MyPayment>'
  MyCartDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyCartDraft>'
  MyCartUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyCartUpdate, MyCartUpdateAction, MyCartUpdateBuilder>'
  MyCartUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyCartUpdateAction>'
  MyCartAddLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyCartAddLineItemAction>'
  MyCustomerDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyCustomerDraft>'
  MyPayment:
    (java-extends): 'com.commercetools.api.models.DomainResource<MyPayment>, com.commercetools.api.models.Customizable<MyPayment>'
  MyPaymentDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyPaymentDraft>'
  MyPaymentUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyPaymentUpdate,
      MyPaymentUpdateAction, MyPaymentUpdateBuilder>'
  MyPaymentUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyPaymentUpdateAction>'
  MyShoppingListDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyShoppingListDraft>'
  MyShoppingListUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyShoppingListUpdate,
      MyShoppingListUpdateAction, MyShoppingListUpdateBuilder>'
  MyShoppingListUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyShoppingListUpdateAction>'
  MyShoppingListAddLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyShoppingListAddLineItemAction>'
  MyShoppingListAddTextLineItemAction:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyShoppingListAddTextLineItemAction>'
  MyTransactionDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyTransactionDraft>'
  MyQuoteUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyQuoteUpdate, MyQuoteUpdateAction, MyQuoteUpdateBuilder>'
  MyQuoteUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyQuoteUpdateAction>'
  MyQuoteRequestUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyQuoteRequestUpdate,
      MyQuoteRequestUpdateAction, MyQuoteRequestUpdateBuilder>'
  MyQuoteRequestUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyQuoteRequestUpdateAction>'
  MyCustomerUpdate:
    (java-extends): 'com.commercetools.api.models.ResourceUpdate<MyCustomerUpdate,
      MyCustomerUpdateAction, MyCustomerUpdateBuilder>'
  MyCustomerUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<MyCustomerUpdateAction>'
  MyLineItemDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<MyLineItemDraft>'
  Price:
    (java-extends): 'com.commercetools.api.models.Customizable<Price>, com.commercetools.api.models.WithKey'
  PriceDraft:
    (java-extends): 'com.commercetools.api.models.CustomizableDraft<PriceDraft>, com.commercetools.api.models.WithKey'
  QueryPrice:
    (java-extends): 'com.commercetools.api.models.Customizable<QueryPrice>'
  ScopedPrice:
    (java-extends): 'com.commercetools.api.models.Customizable<ScopedPrice>'
  MyBusinessUnitDraft:
    (java-extends): 'com.commercetools.api.models.Customizable<MyBusinessUnitDraft>, com.commercetools.api.models.WithKey'
  AssociateRolePagedQueryResponse:
    (java-extends): 'com.commercetools.api.models.ResourcePagedQueryResponse<AssociateRole>'
  AssociateRole:
    (java-extends): 'com.commercetools.api.models.Identifiable<AssociateRole>'
  AssociateRoleResourceIdentifier:
    (java-extends): 'com.commercetools.api.models.Identifiable<AssociateRole>'
  AssociateRoleUpdateAction:
    (java-extends): 'com.commercetools.api.models.ResourceUpdateAction<AssociateRoleUpdateAction>'
  MessageDeliveryPayload:
    (java-extends): MessageDeliveryPayloadMixin
    (java-impl-mixin): |
      private com.commercetools.api.models.message.MessagePayload messagePayload;

      @Override
      public com.commercetools.api.models.message.MessagePayload getMessagePayload() {
          return messagePayload;
      }
  MessagePayload:
    (java-extends): MessagePayloadMixin
/{projectKey}:
  /categories:
    (java-implements): 'ByProjectKeyCategoriesRequestBuilderMixin'
    get:
      (java-implements): 'ByProjectKeyCategoriesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCategoriesKeyByKeyDelete, com.commercetools.api.models.category.Category>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCategoriesByIDDelete, com.commercetools.api.models.category.Category>'
  /carts:
    (java-implements): 'ByProjectKeyCartsRequestBuilderMixin'
    get:
      (java-implements): 'ByProjectKeyCartsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCartsKeyByKeyDelete, com.commercetools.api.models.cart.Cart>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCartsByIDDelete, com.commercetools.api.models.cart.Cart>'

  /cart-discounts:
    (java-implements): 'ByProjectKeyCartDiscountsRequestBuilderMixin'
    get:
      (java-implements): 'ByProjectKeyCartDiscountsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCartDiscountsKeyByKeyDelete, com.commercetools.api.models.cart_discount.CartDiscount>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCartDiscountsByIDDelete, com.commercetools.api.models.cart_discount.CartDiscount>'

  /channels:
    (java-implements): 'ByProjectKeyChannelsRequestBuilderMixin'
    get:
      (java-implements): 'ByProjectKeyChannelsGetMixin'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyChannelsByIDDelete, com.commercetools.api.models.channel.Channel>'

  /customers:
    (java-implements): 'ByProjectKeyCustomersRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyCustomersGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCustomersKeyByKeyDelete, com.commercetools.api.models.customer.Customer>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCustomersByIDDelete, com.commercetools.api.models.customer.Customer>'

  /custom-objects:
    get:
      (java-implements):
        'ByProjectKeyCustomObjectsGetMixin'
    /{container}:
      get:
        (java-implements):
          'ByProjectKeyCustomObjectsByContainerGetMixin'
  /customer-groups:
    (java-implements): 'ByProjectKeyCustomerGroupsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyCustomerGroupsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCustomerGroupsKeyByKeyDelete, com.commercetools.api.models.customer_group.CustomerGroup>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyCustomerGroupsByIDDelete, com.commercetools.api.models.customer_group.CustomerGroup>'

  /discount-codes:
    (java-implements): 'ByProjectKeyDiscountCodesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyDiscountCodesGetMixin'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyDiscountCodesByIDDelete, com.commercetools.api.models.discount_code.DiscountCode>'

  /in-store/key={storeKey}:
    /me:
      /shopping-lists:
        get:
          (java-implements):
            'ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsGetMixin'
    /shopping-lists:
      (java-implements): 'ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestMixin'
      get:
        (java-implements):
          'ByProjectKeyInStoreKeyByStoreKeyShoppingListsGetMixin'
    /carts:
      (java-implements): 'ByProjectKeyInStoreKeyByStoreKeyCartsRequestMixin'
    /customers:
      (java-implements): 'ByProjectKeyInStoreKeyByStoreKeyCustomersRequestMixin'
    /orders:
      (java-implements): 'ByProjectKeyInStoreKeyByStoreKeyOrdersRequestMixin'
  /inventory:
    (java-implements): 'ByProjectKeyInventoryRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyInventoryGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyInventoryKeyByKeyDelete, com.commercetools.api.models.inventory.InventoryEntry>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyInventoryByIDDelete, com.commercetools.api.models.inventory.InventoryEntry>'
  /graphql:
    (java-mixin): |
      public <TMethod> TMethod query(ProjectRequestBuilder<TMethod> requestBuilder) {
          return requestBuilder.build(apiHttpClient, projectKey);
      }
  /messages:
    get:
      (java-implements):
        'ByProjectKeyMessagesGetMixin'
  /orders:
    (java-implements): 'ByProjectKeyOrdersRequestBuilderMixin'
    /edits:
      get:
        (java-implements):
          'ByProjectKeyOrdersEditsGetMixin'
    get:
      (java-implements): 'ByProjectKeyOrdersGetMixin'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyOrdersByIDDelete, com.commercetools.api.models.order.Order>'

  /payments:
    (java-implements): 'ByProjectKeyPaymentsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyPaymentsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyPaymentsKeyByKeyDelete, com.commercetools.api.models.payment.Payment>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyPaymentsByIDDelete, com.commercetools.api.models.payment.Payment>'

  /products:
    (java-implements): 'ByProjectKeyProductsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyProductsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductsKeyByKeyDelete, com.commercetools.api.models.product.Product>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductsByIDDelete, com.commercetools.api.models.product.Product>'

  /product-discounts:
    (java-implements): 'ByProjectKeyProductDiscountsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyProductDiscountsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductDiscountsKeyByKeyDelete, com.commercetools.api.models.product_discount.ProductDiscount>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductDiscountsByIDDelete, com.commercetools.api.models.product_discount.ProductDiscount>'

  /product-projections:
    get:
      (java-implements):
        'ByProjectKeyProductProjectionsGetMixin'
    /search:
      post:
        (java-implements): 'ByProjectKeyProductProjectionsSearchPostMixin'
  /product-selections:
    (java-implements): 'ByProjectKeyProductSelectionsRequestMixin'
    get:
      (java-implements):
        'ByProjectKeyProductSelectionsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductSelectionsKeyByKeyDelete, com.commercetools.api.models.product_selection.ProductSelection>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductSelectionsByIDDelete, com.commercetools.api.models.product_selection.ProductSelection>'
  /product-types:
    (java-implements): 'ByProjectKeyProductTypesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyProductTypesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductTypesKeyByKeyDelete, com.commercetools.api.models.product_type.ProductType>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyProductTypesByIDDelete, com.commercetools.api.models.product_type.ProductType>'
  /quotes:
    (java-implements): 'ByProjectKeyQuotesRequestBuilderMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyQuotesKeyByKeyDelete, com.commercetools.api.models.quote.Quote>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyQuotesByIDDelete, com.commercetools.api.models.quote.Quote>'

  /quote-requests:
    (java-implements): 'ByProjectKeyQuoteRequestsRequestBuilderMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyQuoteRequestsKeyByKeyDelete, com.commercetools.api.models.quote_request.QuoteRequest>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyQuoteRequestsByIDDelete, com.commercetools.api.models.quote_request.QuoteRequest>'

  /staged-quotes:
    (java-implements): 'ByProjectKeyStagedQuotesRequestBuilderMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStagedQuotesKeyByKeyDelete, com.commercetools.api.models.staged_quote.StagedQuote>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStagedQuotesByIDDelete, com.commercetools.api.models.staged_quote.StagedQuote>'

  /reviews:
    (java-implements): 'ByProjectKeyReviewsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyReviewsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyReviewsKeyByKeyDelete, com.commercetools.api.models.review.Review>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyReviewsByIDDelete, com.commercetools.api.models.review.Review>'

  /shipping-methods:
    (java-implements): 'ByProjectKeyShippingMethodsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyShippingMethodsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyShippingMethodsKeyByKeyDelete, com.commercetools.api.models.shipping_method.ShippingMethod>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyShippingMethodsByIDDelete, com.commercetools.api.models.shipping_method.ShippingMethod>'

  /shopping-lists:
    (java-implements): 'ByProjectKeyShoppingListsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyShoppingListsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyShoppingListsKeyByKeyDelete, com.commercetools.api.models.shopping_list.ShoppingList>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyShoppingListsByIDDelete, com.commercetools.api.models.shopping_list.ShoppingList>'

  /states:
    (java-implements): 'ByProjectKeyStatesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyStatesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStatesKeyByKeyDelete, com.commercetools.api.models.state.State>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStatesByIDDelete, com.commercetools.api.models.state.State>'

  /subscriptions:
    (java-implements): 'ByProjectKeySubscriptionsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeySubscriptionsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeySubscriptionsKeyByKeyDelete, com.commercetools.api.models.subscription.Subscription>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeySubscriptionsByIDDelete, com.commercetools.api.models.subscription.Subscription>'

  /tax-categories:
    (java-implements): 'ByProjectKeyTaxCategoriesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyTaxCategoriesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyTaxCategoriesKeyByKeyDelete, com.commercetools.api.models.tax_category.TaxCategory>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyTaxCategoriesByIDDelete, com.commercetools.api.models.tax_category.TaxCategory>'

  /types:
    (java-implements): 'ByProjectKeyTypesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyTypesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyTypesKeyByKeyDelete, com.commercetools.api.models.type.Type>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyTypesByIDDelete, com.commercetools.api.models.type.Type>'

  /zones:
    (java-implements): 'ByProjectKeyZonesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyZonesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyZonesKeyByKeyDelete, com.commercetools.api.models.zone.Zone>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyZonesByIDDelete, com.commercetools.api.models.zone.Zone>'

  /extensions:
    (java-implements): 'ByProjectKeyExtensionsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyExtensionsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyExtensionsKeyByKeyDelete, com.commercetools.api.models.extension.Extension>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyExtensionsByIDDelete, com.commercetools.api.models.extension.Extension>'

  /stores:
    (java-implements): 'ByProjectKeyStoresRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyStoresGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStoresKeyByKeyDelete, com.commercetools.api.models.store.Store>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStoresByIDDelete, com.commercetools.api.models.store.Store>'

  /standalone-prices:
    (java-implements): 'ByProjectKeyStandalonePricesRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyStandalonePricesGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStandalonePricesKeyByKeyDelete, com.commercetools.api.models.standalone_price.StandalonePrice>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyStandalonePricesByIDDelete, com.commercetools.api.models.standalone_price.StandalonePrice>'

  /attribute-groups:
    (java-implements): 'ByProjectKeyAttributeGroupsRequestBuilderMixin'
    get:
      (java-implements): 'ByProjectKeyAttributeGroupsGetMixin'
    /key={key}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyAttributeGroupsKeyByKeyDelete, com.commercetools.api.models.attribute_group.AttributeGroup>'
    /{ID}:
      delete:
        (java-implements):
          'com.commercetools.api.client.ApiDeleteMethod<ByProjectKeyAttributeGroupsByIDDelete, com.commercetools.api.models.attribute_group.AttributeGroup>'

  /api-clients:
    (java-implements): 'ByProjectKeyApiClientsRequestBuilderMixin'
    get:
      (java-implements):
        'ByProjectKeyApiClientsGetMixin'
  /as-associate:
    /{associateId}:
      /business-units:
        get:
          (java-implements):
            'ByProjectKeyAsAssociateByAssociateIdBusinessUnitsGetMixin'
  /associate-roles:
    get:
      (java-implements):
        'ByProjectKeyAssociateRolesGetMixin'
  /business-units:
    get:
      (java-implements):
        'ByProjectKeyBusinessUnitsGetMixin'
