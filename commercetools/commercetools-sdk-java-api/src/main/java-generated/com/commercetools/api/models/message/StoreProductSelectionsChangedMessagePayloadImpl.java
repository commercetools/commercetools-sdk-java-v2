package com.commercetools.api.models.message;

import com.commercetools.api.models.message.MessagePayload;
import com.commercetools.api.models.store.ProductSelectionSetting;
import io.vrap.rmf.base.client.utils.Generated;
import io.vrap.rmf.base.client.ModelBase;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.*;
import java.time.*;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.annotation.*;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

/**
 *  <p>Generated by a successful Add Product Selection, Remove Product Selection, Set Product Selections, or Change Product Selections Active update action.</p>
 */
@Generated(
    value = "io.vrap.rmf.codegen.rendering.CoreCodeGenerator",
    comments = "https://github.com/commercetools/rmf-codegen"
)
public class StoreProductSelectionsChangedMessagePayloadImpl implements StoreProductSelectionsChangedMessagePayload, ModelBase {

    
    private String type;
    
    
    private java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> addedProductSelections;
    
    
    private java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> removedProductSelections;
    
    
    private java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> updatedProductSelections;

    /**
     * create instance with all properties
     */
    @JsonCreator
    StoreProductSelectionsChangedMessagePayloadImpl(@JsonProperty("addedProductSelections") final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> addedProductSelections, @JsonProperty("removedProductSelections") final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> removedProductSelections, @JsonProperty("updatedProductSelections") final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> updatedProductSelections) {
        this.addedProductSelections = addedProductSelections;
        this.removedProductSelections = removedProductSelections;
        this.updatedProductSelections = updatedProductSelections;
        this.type =  STORE_PRODUCT_SELECTIONS_CHANGED;
    }
    /**
     * create empty instance
     */
    public StoreProductSelectionsChangedMessagePayloadImpl() {
        this.type =  STORE_PRODUCT_SELECTIONS_CHANGED;
    }

    /**
     *
     */
    
    public String getType(){
        return this.type;
    }
    
    /**
     *  <p>ProductSelectionSettings that were added to the Store.</p>
     */
    
    public java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> getAddedProductSelections(){
        return this.addedProductSelections;
    }
    
    /**
     *  <p>ProductSelectionSettings that were removed from the Store.</p>
     */
    
    public java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> getRemovedProductSelections(){
        return this.removedProductSelections;
    }
    
    /**
     *  <p>ProductSelectionSettings that were updated in the Store.</p>
     */
    
    public java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> getUpdatedProductSelections(){
        return this.updatedProductSelections;
    }

    
    public void setAddedProductSelections(final com.commercetools.api.models.store.ProductSelectionSetting ...addedProductSelections){
       this.addedProductSelections = new ArrayList<>(Arrays.asList(addedProductSelections));
    }
    
    
    public void setAddedProductSelections(final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> addedProductSelections){
       this.addedProductSelections = addedProductSelections;
    }
    
    
    public void setRemovedProductSelections(final com.commercetools.api.models.store.ProductSelectionSetting ...removedProductSelections){
       this.removedProductSelections = new ArrayList<>(Arrays.asList(removedProductSelections));
    }
    
    
    public void setRemovedProductSelections(final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> removedProductSelections){
       this.removedProductSelections = removedProductSelections;
    }
    
    
    public void setUpdatedProductSelections(final com.commercetools.api.models.store.ProductSelectionSetting ...updatedProductSelections){
       this.updatedProductSelections = new ArrayList<>(Arrays.asList(updatedProductSelections));
    }
    
    
    public void setUpdatedProductSelections(final java.util.List<com.commercetools.api.models.store.ProductSelectionSetting> updatedProductSelections){
       this.updatedProductSelections = updatedProductSelections;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
    
        if (o == null || getClass() != o.getClass()) return false;
    
        StoreProductSelectionsChangedMessagePayloadImpl that = (StoreProductSelectionsChangedMessagePayloadImpl) o;
    
        return new EqualsBuilder()
                .append(type, that.type)
                .append(addedProductSelections, that.addedProductSelections)
                .append(removedProductSelections, that.removedProductSelections)
                .append(updatedProductSelections, that.updatedProductSelections)
                .isEquals();
    }
    
    @Override
    public int hashCode() {
        return new HashCodeBuilder(17, 37)
            .append(type)
            .append(addedProductSelections)
            .append(removedProductSelections)
            .append(updatedProductSelections)
            .toHashCode();
    }

}
