plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "de.undercouch.download" version "5.3.0"
}

group = 'com.commercetools.sdk.examples'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    versions = [
            commercetools: "19.1.0",
    ]
}

dependencies {
    implementation "com.commercetools.sdk:commercetools-sdk-java-api:${versions.commercetools}"
    implementation "com.commercetools.sdk:commercetools-apachehttp-client:${versions.commercetools}"
    implementation "com.commercetools.sdk:commercetools-monitoring-opentelemetry:${versions.commercetools}"
    implementation 'io.opentelemetry:opentelemetry-api:1.28.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('downloadOtel', Download) {
    mkdir 'otel'
    src 'https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar'
    dest file('otel')
}

if (project.file("otel/opentelemetry-javaagent.jar").exists()) {
    tasks.withType(JavaExec)
            {
                jvmArgs "-javaagent:otel/opentelemetry-javaagent.jar",
                        "-Dotel.resource.attributes=service.name=spring-otel"
            }
}
