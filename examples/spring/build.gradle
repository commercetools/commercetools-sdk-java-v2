plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "5.17.0"
    id "de.undercouch.download" version "5.0.5"
}

group = 'com.commercetools.sdk.examples'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'com.diffplug.spotless'

spotless {
    def importOrderConfigFile = rootProject.file("../../src/eclipse/eclipse.importorder")
    def javaFormatterConfigFile = rootProject.file("../../src/eclipse/eclipse-formatter-settings.xml")

    java {
        importOrderFile(importOrderConfigFile)
        eclipse().configFile(javaFormatterConfigFile)
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

ext {
    versions = [
        commercetools: "8.8.0-SNAPSHOT",
        newrelic: "7.7.0"
    ]
}

dependencies {
    implementation "com.commercetools.sdk:commercetools-sdk-java-api:${versions.commercetools}"
    implementation "com.commercetools.sdk:commercetools-okhttp-client3:${versions.commercetools}"
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation "com.newrelic.agent.java:newrelic-api:${versions.newrelic}"
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

task downloadNewRelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewRelic(type: Copy) {
    dependsOn downloadNewRelic
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}
