// maven-specific publishing settings
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    scm {
        connection "scm:git:$scmHttpsUrl"
        developerConnection "scm:git:$scmSshUrl"
        url "$scmProjectUrl"
    }
}

def excludeProjects = [
        'internal-docs'
]

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv('CTP_OSS_USER')
            password = System.getenv('CTP_OSS_SECRET')
        }
    }
}

subprojects { project ->
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    if (project.file("build.gradle").exists() && !excludeProjects.contains(project.name)) {
        publishing {
            repositories {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/commercetools/commercetools-sdk-java-v2")
                    credentials {
                        username = System.getenv("GITHUB_ACTOR")
                        password = System.getenv("GITHUB_TOKEN")
                    }
                }
            }
            publications {
                Maven(MavenPublication) {
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                    groupId group
                    artifactId project.name
                    version version

                    pom {
                        name = project.name
                        description = project.description
                        developers {
                            developer {
                                id = "jenschude"
                                name = "Jens Schulze"
                                email = "jens.schulze@commercetools.com"
                            }
                        }
                        url = scmHttpsUrl
                    }
                    pom.withXml {
                        def root = asNode()
                        root.children().last() + pomConfig
                    }
                }
            }
        }

        signing {
            useGpgCmd()
            sign publishing.publications.Maven
        }

        tasks.withType(Sign) {
            onlyIf { !version.toString().endsWith("SNAPSHOT") }
        }
    }
}
