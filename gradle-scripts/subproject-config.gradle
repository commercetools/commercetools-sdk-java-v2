test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestApi.extendsFrom(testApi)
    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

javadoc {
    source = sourceSets.main.allJava
    classpath = sourceSets.test.compileClasspath

    options {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor false
        noTimestamp = true
        splitIndex = true
        noTree = true
        title = "commercetools Java SDK"
        links 'https://docs.oracle.com/javase/8/docs/api/', "https://fasterxml.github.io/jackson-databind/javadoc/2.14/", 'https://commercetools.github.io/commercetools-jvm-sdk/apidocs/', 'https://newrelic.github.io/java-agent-api/javadoc/'
        maxMemory = '2g'
        addBooleanOption('-allow-script-in-comments', true)
        addStringOption('Xdoclint:missing,accessibility,reference', '-quiet')
        addStringOption('source', '8')
        encoding = 'utf-8'
        taglets = ['com.commercetools.taglets.CodeTaglet', 'com.commercetools.taglets.ToCTaglet', 'com.commercetools.taglets.FileIncludeTaglet', 'org.jdrupes.taglets.plantUml.StartUml', 'org.jdrupes.taglets.plantUml.EndUml', 'org.jdrupes.taglets.plantUml.PlantUml']
        bottom = """
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.8.0/styles/default.min.css">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.8.0/highlight.min.js"></script>
            <script>hljs.initHighlightingOnLoad();</script>
            <span id="custom-javascripts"></span>
            <script src="{@docRoot}/resources/javascripts/main.js"></script>
            <link rel="stylesheet" href="{@docRoot}/resources/stylesheets/main.css">
        """
    }
    afterEvaluate {
        options {
            tagletPath = configurations.taglet.files as List
        }
    }
}

ext {
    buildInfoPath = "build/generated/src/main/java"
    buildInfoPackage = "io.vrap.rmf.base.client"
}

srcInfo {
    includePackages = [
            "example",
            "commercetools"
    ]
}

tasks.register('integrationTest', Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter(test)

    testLogging {
        events "failed"
        exceptionFormat "full"

        info {
            events "failed"
            exceptionFormat "full"
        }
    }
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
    dependsOn "javadoc"
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}
